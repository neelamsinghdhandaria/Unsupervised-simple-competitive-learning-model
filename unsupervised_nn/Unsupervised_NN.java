
package unsupervised_nn;

public class Unsupervised_NN {

    
    public static void main(String[] args) {
        // TODO code application logic here
        double coefficient = 0.2;
        double[] grp1 = {0.2, 0.1, 0.1, 0.1, 0.1, 0.2,0.1,0.1};
        double[] grp2 = {0.2, 0.1, 0.1, 0.1, 0.1, 0.1,0.2,0.1};
        double[] grp3 = {0.2, 0.2, 0.1, 0.1, 0.1, 0.1,0.1,0.1};
        
        
        
        
        int[][] input_dataset={
{1,0,0,0,1,1,0,0},{0,1,0,0,0,1,1,0},{1,0,1,0,1,1,1,0},{0,1,1,1,1,1,1,1},{0,1,1,0,1,1,0,0},{0,1,1,1,1,1,1,0},{0,0,0,0,1,1,1,0},{1,1,0,0,1,1,0,0},{0,1,1,0,1,1,1,0},
{0,1,1,1,1,1,1,0},{0,1,1,0,1,1,1,0},{0,1,0,1,1,1,1,0},{0,1,1,1,1,1,1,0},{0,1,1,0,1,1,1,0},{0,1,0,0,1,1,1,1},{0,1,0,0,1,1,1,0},{0,1,1,1,1,1,1,0},{1,1,0,1,1,1,0,0},
{0,1,0,1,1,1,1,0},{0,0,1,1,1,1,1,0},{0,0,0,0,1,1,1,0},{0,1,1,0,1,1,1,0},{0,0,0,1,1,1,1,0},{0,1,0,1,1,1,1,0},{1,1,1,1,1,1,1,0},
{0,1,1,0,0,1,1,0},{0,1,1,0,1,1,1,0},{0,0,1,0,1,1,1,0},{1,1,0,1,1,1,1,0},{0,1,1,1,1,1,1,1},{0,1,1,0,0,1,1,0},{0,1,0,1,1,1,1,0},{0,1,0,1,1,1,1,1},
{0,0,0,1,0,1,1,0},{0,1,1,0,0,1,1,0},{0,1,0,1,1,1,0,0},{0,1,0,1,1,1,1,0},{0,1,0,1,1,1,1,1},{1,1,1,1,1,1,1,0},{1,1,1,1,1,1,0,0},{0,1,0,1,0,1,1,1},
{0,1,0,0,0,1,1,1},{0,1,0,1,1,1,1,0},{1,1,0,0,1,1,1,0},{1,0,0,1,1,1,1,0},{1,1,1,1,1,1,1,1},{0,1,0,0,1,1,1,0},{0,0,0,1,1,1,1,0},{0,1,1,0,1,1,0,0},
{1,1,0,1,0,1,1,0},{0,1,1,0,1,1,1,0},{0,1,1,0,1,1,1,0},{0,0,0,0,1,1,0,0},{1,1,1,0,1,1,1,0},{0,0,1,0,1,1,1,0},{0,0,1,1,1,1,1,1},{0,1,1,1,1,1,1,0},
{0,1,0,1,1,1,0,0},{1,1,0,1,1,1,1,0},{0,1,0,0,1,1,1,0},{0,1,0,1,1,1,0,0},{1,1,0,1,0,1,1,1},{1,0,0,1,1,1,1,0},{1,1,1,1,1,1,1,0},{1,0,0,1,1,1,1,1},
{0,1,0,1,1,1,1,0},{0,1,0,1,0,1,1,1},{1,1,1,0,1,1,1,0},{1,1,1,0,1,1,1,0},{0,1,0,0,0,1,1,0},{0,1,1,0,1,1,1,0},{0,0,0,0,1,1,1,0},{1,1,0,0,0,1,1,1},
{0,0,0,1,1,1,0,0},{1,1,1,1,1,1,1,0},{0,1,1,1,1,1,1,0},{0,0,0,1,1,1,1,0},{0,0,1,0,1,1,1,1},{1,1,0,1,1,0,1,0},{0,1,0,0,1,1,1,0},{1,1,1,1,0,1,1,1},
{1,0,1,0,0,1,1,0},{0,1,1,0,1,1,1,0},{0,0,1,1,1,1,1,0},{0,1,0,1,0,1,1,0},{0,0,1,0,1,1,1,1},{0,1,0,0,1,1,0,0},{0,1,0,1,1,1,1,0},{0,0,1,1,0,1,1,0},
{0,1,0,0,1,1,0,0},{0,1,1,0,1,1,1,1},{0,0,1,1,1,1,1,0},{1,1,0,0,1,1,0,0},{0,1,1,1,1,1,1,0},{0,1,0,1,1,1,1,0},{1,1,1,1,1,1,1,0},{1,1,0,1,0,1,1,0},
{0,1,1,0,1,1,0,1},{0,0,0,1,0,1,1,0},{1,1,1,0,1,1,1,0},{1,1,1,1,1,1,1,0},{0,1,0,1,1,1,1,1},{0,1,0,1,0,1,1,0},{1,1,1,0,1,1,1,0},{0,1,1,1,1,1,1,0},
{1,0,0,0,1,1,0,0},{1,1,1,0,1,1,1,0},{0,1,0,1,1,1,1,0},{0,1,1,1,1,1,1,1},{0,1,1,1,1,1,1,1},{0,0,0,1,1,1,1,0},{1,1,0,1,1,1,1,0},{1,0,0,1,1,1,1,0},
{0,0,0,0,1,1,1,0},{0,0,0,1,1,1,1,1},{0,1,0,1,1,1,1,0},{0,1,0,1,1,1,0,0},{0,0,0,1,1,1,1,0},{0,1,0,1,1,1,1,0},{0,0,0,0,1,1,1,0},{0,0,0,0,0,1,1,0},
{0,1,1,1,1,1,1,0},{0,1,1,1,1,1,1,1},{0,1,0,1,1,1,1,0},{0,0,1,0,1,1,1,1},{1,0,0,0,1,1,1,0},{1,0,0,1,1,1,1,1},{0,1,0,0,0,0,0,0},{0,1,0,1,1,1,1,0},
{0,0,1,1,1,1,1,0},{0,1,0,0,1,1,1,1},{0,1,0,1,0,1,1,1},{0,1,0,0,1,1,1,1},{0,0,0,0,1,1,1,0},{0,1,0,0,1,1,0,1},{0,1,0,1,1,1,1,1},{0,0,0,0,1,1,0,0},
{0,1,0,1,0,1,1,1},{0,0,0,0,1,1,0,1},{0,0,0,1,1,1,1,0},{1,1,0,0,1,1,1,0},{0,1,0,1,1,1,1,0},{0,1,1,1,1,1,1,0},{0,0,0,0,1,1,1,0},{0,1,0,0,1,1,1,0},
{0,1,1,0,1,1,1,0},{0,1,0,0,1,1,1,0},{0,1,1,0,0,1,1,0},{0,1,0,0,1,0,1,1},{0,0,0,0,1,1,1,0},{0,0,0,0,1,0,1,1},{0,0,0,1,1,1,0,1},{0,1,1,1,1,1,1,1},
{0,1,0,0,1,0,1,1},{1,1,0,0,1,1,0,1},{1,0,1,1,1,1,0,0},{0,0,0,0,1,1,0,0},{0,1,0,1,0,1,0,0},{0,0,0,0,0,1,0,0},{0,1,1,0,1,1,1,1},{0,0,0,1,1,0,1,1},
{1,1,0,0,1,1,1,1},{0,0,0,1,1,1,0,0},{0,0,0,0,1,0,1,0},{0,0,0,1,1,0,0,1},{0,1,0,1,0,0,0,0},{0,0,0,0,1,0,1,0},{0,0,1,0,1,1,1,1},{0,1,1,0,0,1,1,0},
{0,1,1,0,1,1,1,1},{0,1,0,1,0,1,1,0},{0,1,1,1,1,1,1,1},{0,1,1,1,1,1,1,0},{0,0,0,1,0,1,1,1},{0,1,1,1,1,1,1,0},{0,0,1,1,1,1,1,0},{0,0,1,1,0,1,1,0},
{0,0,0,1,0,1,1,0},{0,1,0,1,1,1,1,1},{0,1,0,1,1,1,1,1},{0,1,1,1,1,1,1,0},{0,0,1,1,1,1,1,1},{0,1,0,1,1,1,0,0},{0,1,0,1,1,1,1,1},{0,1,1,0,1,1,1,0},
{0,1,0,1,1,1,1,1},{0,1,1,1,1,1,1,1},{0,0,1,1,1,1,1,1},{0,1,0,0,0,1,1,1},{0,0,0,0,1,1,0,0},{0,0,0,0,1,1,1,0},{0,0,0,1,1,1,1,0},{0,0,1,1,0,1,1,0},
{0,1,0,1,1,1,1,0},{0,0,0,0,1,1,1,0},{0,0,0,1,1,1,1,1},{0,0,0,0,1,1,1,0},{0,1,1,1,1,1,1,0},{0,1,0,0,1,1,1,0},{0,1,1,0,1,1,1,0},{0,1,0,1,1,1,1,0},
{1,1,1,1,1,1,0,0},{0,1,1,0,0,1,0,0},{0,1,0,0,1,1,1,0},{0,1,1,1,0,1,1,0},{0,1,1,0,1,1,1,1},{0,1,1,0,1,1,1,0},{0,0,1,1,1,1,1,1},{0,1,1,0,1,1,0,0},
{0,1,1,1,1,1,1,1},{0,1,1,1,1,1,1,0},{0,1,1,0,1,1,1,1},{1,1,1,0,1,1,1,0},{0,1,1,1,1,1,1,0},{0,1,1,0,1,1,0,0},{0,0,1,0,1,1,1,0},{0,0,1,0,1,1,1,1},
{0,1,1,0,1,1,1,0},{0,1,1,0,1,1,0,0},{0,1,1,1,1,1,1,0},{0,1,0,1,1,1,1,0},{0,1,0,1,1,1,0,1},{1,0,0,0,1,1,1,0},{0,1,1,0,1,1,1,0},{0,1,0,1,0,1,1,0},
{0,0,0,1,1,1,1,1},{0,0,0,1,0,1,1,0},{0,1,1,0,0,1,1,0},{1,1,1,1,1,1,1,1},{0,0,0,1,1,1,1,1},{0,0,0,1,1,1,1,1},{0,1,1,1,1,1,1,0},{1,1,0,1,1,1,1,1},
{0,1,1,1,1,1,1,0},{0,1,1,0,1,1,1,0},{0,0,0,1,1,1,1,1},{0,0,1,1,0,1,1,1},{0,0,0,0,1,1,1,1},{0,0,0,1,1,1,0,0},{0,0,0,0,1,0,1,0},{0,0,0,1,1,1,1,1},
{0,1,1,0,1,1,1,0},{0,0,0,1,0,1,1,0},{0,0,0,1,1,1,1,0},{0,1,1,0,0,1,1,1},{0,0,0,0,1,1,1,0},{0,0,0,0,1,1,1,0},{0,0,0,0,0,0,1,1},{0,1,0,0,1,1,1,1},
{0,0,1,0,0,1,1,0},{0,0,0,0,1,0,1,0},{1,1,0,0,0,1,1,0},{0,0,0,0,0,0,1,0},{0,0,0,1,0,1,0,0},{0,0,0,0,0,1,1,0},{0,1,0,1,1,1,1,0},{0,1,1,1,1,1,1,0},
{0,1,0,0,1,1,1,0},{0,0,0,1,1,1,1,0},{0,0,1,1,1,1,1,1},{0,1,1,0,1,1,1,1},{0,1,1,0,0,1,1,0},{0,0,0,1,0,1,0,0},{0,0,0,1,0,1,0,0},{0,1,1,1,1,1,1,1},
{0,1,1,1,1,1,1,0},{0,0,1,1,1,1,1,1},{0,0,1,1,1,1,1,0},{0,1,1,1,1,1,1,1},{0,1,0,0,1,0,1,1},{0,1,1,1,1,1,1,0},{0,1,1,1,1,1,1,1},{0,1,1,0,0,1,0,0},
{0,1,1,1,0,1,0,1},{0,1,1,0,1,1,1,1},{1,1,1,0,1,1,1,1},{0,0,0,0,0,0,1,1},{0,0,1,1,1,1,1,0},{1,1,0,1,1,1,1,1},{0,0,1,1,1,1,1,0},{0,0,1,1,1,1,1,1},
{0,0,0,0,1,1,1,0},{0,1,1,1,1,1,0,0},{1,0,0,1,1,1,1,0},{0,1,0,0,0,1,1,0},{0,0,1,0,0,1,1,0},{0,1,1,0,1,1,1,0},{0,1,1,0,1,1,1,0},{0,0,1,1,1,1,1,0},
{0,1,1,1,1,1,1,0},{0,1,1,1,1,1,1,1},{0,1,1,0,1,1,1,0},{0,0,0,0,1,1,1,1},{0,1,1,0,1,1,0,0},{0,1,1,1,1,1,1,0},{0,1,1,0,1,1,1,0},{0,1,1,1,1,1,1,0},
{0,1,1,0,1,1,1,1},{0,1,1,0,1,1,1,0},{0,1,1,0,1,1,1,1},{0,1,0,0,1,1,1,1},{0,0,1,0,1,1,1,0},{0,1,1,0,1,1,1,0},{0,1,1,1,0,1,1,0},{0,1,0,1,1,1,1,1},
{0,1,1,1,1,1,1,0},{0,0,0,1,1,1,0,0},{0,1,1,0,1,1,1,1},{0,0,0,1,1,1,0,1},{1,1,0,1,0,1,1,0},{0,0,0,1,0,1,0,1},{0,1,0,0,1,0,1,1},{0,0,0,0,0,1,1,0},
{0,1,1,0,0,1,1,1},{0,0,0,0,0,1,1,1},{0,0,0,0,1,1,1,1},{0,1,1,1,1,1,1,0},{0,1,1,1,1,1,1,1},{0,1,1,1,0,1,1,0},{0,1,1,0,1,1,1,0},{0,1,1,0,1,1,1,1},
{0,1,0,0,1,1,0,1},{0,1,1,1,1,1,1,0},{0,1,0,0,0,1,1,0},{0,0,0,0,1,1,1,0},{0,0,0,1,1,1,1,0},{0,0,0,1,0,1,1,0},{0,1,0,0,1,1,1,0},{0,1,1,1,1,1,1,0},
{0,1,1,0,0,1,1,1},{0,1,0,1,1,1,1,0},{0,1,0,0,1,1,1,1},{0,0,0,1,1,1,1,0},{0,0,0,1,0,1,1,1},{0,0,0,1,1,1,0,0},{0,0,0,0,1,1,1,0},{0,0,1,0,1,1,0,0},
{0,1,1,0,1,1,1,1},{0,1,0,0,1,1,1,0},{0,1,1,0,1,1,1,0},{0,0,1,1,1,1,1,1},{0,1,0,1,1,1,1,0},{0,0,0,1,1,1,1,1},
{0,1,0,0,1,1,1,1},{0,1,0,0,1,1,1,0},{0,0,0,0,1,1,1,1},{0,0,0,0,1,1,1,1},{0,1,1,0,1,1,1,1},{0,1,1,1,1,1,1,1},{0,1,0,0,0,1,1,0},{0,0,0,0,1,1,1,0},
{0,1,1,0,1,1,1,0},{0,0,0,0,1,0,1,1},{0,1,0,0,1,1,1,0},{0,1,1,1,0,1,1,1},{0,1,0,0,1,1,0,1},{0,1,1,1,1,1,1,0},{0,0,0,0,1,1,0,1},{0,0,0,0,0,1,1,1},
{0,0,0,0,1,1,1,0},{0,0,0,0,1,1,0,1},{0,0,0,1,0,0,0,0},{0,1,0,0,1,1,1,1},{0,1,1,1,1,1,1,1},{0,0,0,0,0,1,0,0},{0,1,1,0,1,1,0,0},{0,0,1,0,1,1,1,1},
{0,1,1,0,1,1,1,1},{0,1,1,0,1,1,1,1},{0,1,1,0,0,1,1,1},{0,0,0,1,1,1,0,1},{0,1,1,1,1,0,1,1},{0,0,0,1,1,1,0,1},{0,0,0,1,1,1,1,0},{0,0,0,0,1,1,1,0},
{0,0,0,0,1,1,1,0},{0,1,1,0,0,1,1,1},{0,0,1,1,1,1,1,0},{0,0,1,0,1,1,1,1},{0,1,1,1,0,1,1,0},{0,0,1,1,0,1,1,0},{0,0,0,1,0,1,1,1},{0,0,0,1,1,1,1,0},
{0,0,0,0,1,1,0,0},{0,0,1,0,1,1,0,0},{0,0,1,0,1,1,0,0},{0,1,1,1,1,1,1,1},{0,0,0,1,0,1,1,0},{0,1,1,0,1,1,1,0},{0,0,0,1,1,1,0,0},{0,1,1,0,1,1,0,0},
{0,0,0,0,0,1,1,0},{0,0,0,0,0,1,0,0},{0,0,0,0,0,1,1,0},{0,0,0,0,1,1,1,0}};
        
        int[] clst = new int[395];
        int iterations_count = 600;
        
        int n = 0;
        double sum1 = 0;
        double sum2 = 0;
        double sum3 = 0;
        double m = 0;
        while (n < iterations_count) {
      
            for (int i = 0; i < 395; i++) {
                sum1 = 0;
                sum2 = 0;
                sum3 = 0;
                m = 0;
                for (int j = 0; j < 8; j++) {
                    sum1 = sum1 + input_dataset[i][j] * grp1[j];
                    sum2 = sum2 + input_dataset[i][j] * grp2[j];
                    sum3 = sum3 + input_dataset[i][j] * grp3[j];
                    if (input_dataset[i][j] == 1) {
                        m++;
                    }
                }
                sum1 = Math.round(sum1 * 100.0) / 100.0;
                sum2 = Math.round(sum2 * 100.0) / 100.0;
                sum3 = Math.round(sum3 * 100.0) / 100.0;
                System.out.println("h(eq1) values for Input data " + (i + 1) + " is : " + sum1 + " , " + sum2 + " , " + sum3);
                if (sum1 >= sum2 && sum1 >= sum3) {
                   
                    clst[i] = 1;
                    for (int k = 0; k < 8; k++) {
                      grp1[k] = grp1[k] + coefficient * ((input_dataset[i][k] / m) - grp1[k]);
                        grp1[k] = Math.round(grp1[k] * 100.0) / 100.0;

                    }

                } else if (sum2 >= sum1 && sum2 >= sum3) {
                     
                    clst[i] = 2;
                    for (int k = 0; k < 8; k++) {
                        grp2[k] = grp2[k] + coefficient * ((input_dataset[i][k] / m) - grp2[k]);
                        grp2[k] = Math.round(grp2[k] * 100.0) / 100.0;

                    }

                } else if (sum3 >= sum2 && sum3>=sum1) {
                     
                    clst[i] = 3;
                    for (int k = 0; k < 8; k++) {
                        grp3[k] = grp3[k] + coefficient * ((input_dataset[i][k] / m) - grp3[k]);
                        grp3[k] = Math.round(grp3[k] * 100.0) / 100.0;
                    }

                }

            }

            System.out.println("New Weights after " + (n+1) + " Iteration are :");
            for (int k = 0; k < 8; k++) 
                System.out.println(grp1[k] + " , " + grp2[k] + " , " + grp3[k]);
            
            System.out.println("After " + (n+1) + " Iteration grouping is:");
            for (int k = 0; k < 395; k++) 
                System.out.println("Student " + (k + 1) + " is in Group: " + clst[k]);
            n++;
            
            
            
        }
      
    }

}
